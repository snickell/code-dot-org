<Applab>
  <config><![CDATA[{
  "published": true,
  "game_id": 41,
  "created_at": "2025-01-22T21:21:13.000Z",
  "level_num": "custom",
  "user_id": 1574,
  "properties": {
    "skin": "applab",
    "validation_enabled": "false",
    "code_functions": {
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "getNumber": null,
      "setNumber": null,
      "checkbox": null,
      "radioButton": null,
      "getChecked": null,
      "setChecked": null,
      "image": null,
      "getImageURL": null,
      "setImageURL": null,
      "playSound": null,
      "stopSound": null,
      "playSpeech": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "setSize": null,
      "setProperty": null,
      "getProperty": null,
      "write": null,
      "getXPosition": null,
      "getYPosition": null,
      "setScreen": null,
      "rgb": null,
      "open": null,
      "createCanvas": null,
      "setActiveCanvas": null,
      "line": null,
      "circle": null,
      "rect": null,
      "setStrokeWidth": null,
      "setStrokeColor": null,
      "setFillColor": null,
      "drawImageURL": null,
      "getImageData": null,
      "putImageData": null,
      "clearCanvas": null,
      "getRed": null,
      "getGreen": null,
      "getBlue": null,
      "getAlpha": null,
      "setRed": null,
      "setGreen": null,
      "setBlue": null,
      "setAlpha": null,
      "setRGB": null,
      "getColumn": null,
      "startWebRequest": null,
      "setKeyValue": null,
      "getKeyValue": null,
      "createRecord": null,
      "readRecords": null,
      "updateRecord": null,
      "deleteRecord": null,
      "getUserId": null,
      "drawChart": null,
      "drawChartFromRecords": null,
      "getPrediction": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "setTimeout": null,
      "clearTimeout": null,
      "timedLoop": null,
      "stopTimedLoop": null,
      "getTime": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "moduloOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "mathPow": null,
      "mathSqrt": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "console.clear": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "declareAssign_list_123": null,
      "accessListItem": null,
      "listLength": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "join": null,
      "declareAssign_object": null,
      "getValue": null,
      "addPair": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null,
      "pinMode": null,
      "digitalWrite": null,
      "digitalRead": null,
      "analogWrite": null,
      "analogRead": null,
      "boardConnected": null,
      "var myLed = createLed": null,
      "var myButton = createButton": null,
      "var mySensor = createCapacitiveTouchSensor": null,
      "__.on": null,
      "__.off": null,
      "__.toggle": null,
      "__.blink": null,
      "__.pulse": null,
      "colorLeds[0].on": null,
      "colorLeds[0].off": null,
      "colorLeds[0].toggle": null,
      "colorLeds[0].blink": null,
      "colorLeds[0].pulse": null,
      "stop": null,
      "color": null,
      "intensity": null,
      "led.on": null,
      "led.off": null,
      "led.blink": null,
      "led.toggle": null,
      "led.pulse": null,
      "buzzer.frequency": null,
      "buzzer.note": null,
      "buzzer.stop": null,
      "buzzer.playNotes": null,
      "buzzer.playSong": null,
      "accelerometer.getOrientation": null,
      "accelerometer.getAcceleration": null,
      "isPressed": null,
      "holdtime": null,
      "soundSensor.value": null,
      "soundSensor.setScale": null,
      "soundSensor.threshold": null,
      "lightSensor.value": null,
      "lightSensor.setScale": null,
      "lightSensor.threshold": null,
      "tempSensor.F": null,
      "tempSensor.C": null,
      "toggleSwitch.isOpen": null,
      "onBoardEvent": null,
      "ledScreen.on": null,
      "ledScreen.off": null,
      "ledScreen.toggle": null,
      "ledScreen.display": null,
      "ledScreen.clear": null,
      "ledScreen.scrollNumber": null,
      "ledScreen.scrollString": null,
      "compass.getHeading": null,
      "exit": null,
      "createLed": null,
      "on": null,
      "off": null,
      "toggle": null,
      "blink": null,
      "pulse": null,
      "createButton": null,
      "createCapacitiveTouchSensor": null,
      "ledScreen": null,
      "lightSensor.start": null
    },
    "encrypted": "false",
    "embed": "true",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "never_autoplay_video": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "hide_view_data_button": "false",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "makerlab_enabled": "microbit",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "ai_enabled": "false",
    "start_blocks": "// Variables for car and object positions\r\nvar carX = 160;\r\nvar carY = 240;\r\nvar objectX = randomNumber(10, 310);\r\nvar objectY = randomNumber(10, 440);\r\nvar score = 0;\r\nvar scenarioActive = false;\r\nvar currentScenario = \"\"; // Tracks the active scenario\r\nvar slowPerformanceActive = false; // Tracks if slow performance is active\r\nvar errorStep = 0; // Tracks steps in resolving error messages\r\nvar permissionStep = 0; // Tracks steps in resolving permission errors\r\n\r\n// Initialize game\r\ninitializeGame();\r\nfunction initializeGame() {\r\n  //setScreen(\"gameScreen\");\r\n  setText(\"scoreLabel\", \"Score: \" + score);\r\n  setPosition(\"car\", carX, carY, 50, 50); // Car sprite\r\n  setPosition(\"object\", objectX, objectY, 30, 30); // Collectible object\r\n  timedLoop(1000, function() {\r\n    if (!scenarioActive) {\r\n      checkCollision();\r\n    }\r\n  });\r\n}\r\n\r\n// Move car based on tilt\r\nonBoardEvent(accelerometer, \"data\", function() {\r\n  if (!scenarioActive) {\r\n    var pitch = accelerometer.getOrientation(\"pitch\");\r\n    var roll = accelerometer.getOrientation(\"roll\");\r\n\r\n    // Slow performance effect: Reduce responsiveness\r\n    var movementFactor = slowPerformanceActive ? 20 : 10; // Slower movement if active\r\n    carX = Math.max(0, Math.min(320, carX + roll / movementFactor));\r\n    carY = Math.max(0, Math.min(480, carY + pitch / movementFactor));\r\n    setPosition(\"car\", carX, carY);\r\n  }\r\n});\r\n\r\n// Check for collision\r\nfunction checkCollision() {\r\n  if (Math.abs(carX - objectX) < 30 && Math.abs(carY - objectY) < 30) {\r\n    score += 10;\r\n    setText(\"scoreLabel\", \"Score: \" + score);\r\n    objectX = randomNumber(10, 310);\r\n    objectY = randomNumber(10, 440);\r\n    setPosition(\"object\", objectX, objectY);\r\n\r\n    // Randomly trigger a troubleshooting scenario\r\n    if (randomNumber(1, 5) == 1) {\r\n      triggerScenario();\r\n    }\r\n  }\r\n}\r\n\r\n// Trigger a random troubleshooting scenario\r\nfunction triggerScenario() {\r\n  scenarioActive = true; // Stop gameplay\r\n  var scenario = randomNumber(1, 4); // Random scenario type\r\n  if (scenario == 1) {\r\n    currentScenario = \"error\";\r\n    errorScenario();\r\n  }\r\n  if (scenario == 2) {\r\n    currentScenario = \"permission\";\r\n    permissionScenario();\r\n  }\r\n  if (scenario == 3) {\r\n    currentScenario = \"crash\";\r\n    crashScenario();\r\n  }\r\n  if (scenario == 4) {\r\n    currentScenario = \"slow\";\r\n    slowPerformanceScenario();\r\n  }\r\n}\r\n\r\n// Scenario: Error Messages\r\nfunction errorScenario() {\r\n  setText(\"messageLabel\", \"Fatal Exception: Memory Allocation Error\");\r\n  ledScreen.scrollString(\"MEM ERROR\");\r\n  errorStep = 0;\r\n  showButtons([\"Free Up Memory\", \"Check Logs\", \"Restart Driver\", \"Ignore\"]);\r\n}\r\n\r\nfunction resolveError(action) {\r\n  if (action === \"Free Up Memory\" && errorStep === 0) {\r\n    setText(\"messageLabel\", \"No improvement. Additional action required.\");\r\n    errorStep++;\r\n    showButtons([\"Restart Driver\", \"Check for Updates\", \"Clear Cache\", \"Ignore\"]);\r\n  } else if (action === \"Restart Driver\" && errorStep === 1) {\r\n    setText(\"messageLabel\", \"Error Resolved!\");\r\n    resumeGameplay();\r\n  } else {\r\n    setText(\"messageLabel\", \"Action failed. Try another.\");\r\n  }\r\n}\r\n\r\n// Scenario: Permission Errors\r\nfunction permissionScenario() {\r\n  setText(\"messageLabel\", \"Access Blocked: Insufficient Permissions\");\r\n  ledScreen.scrollString(\"LOCKED\");\r\n  permissionStep = 0;\r\n  showButtons([\"Run as Admin\", \"Request Permission\", \"Check Network\", \"Ignore\"]);\r\n}\r\n\r\nfunction resolvePermission(action) {\r\n  if (action === \"Request Permission\" && permissionStep === 0) {\r\n    setText(\"messageLabel\", \"Access Denied. Try another action.\");\r\n    permissionStep++;\r\n    showButtons([\"Run as Admin\", \"Disable Security\", \"Reinstall Program\", \"Ignore\"]);\r\n  } else if (action === \"Run as Admin\" && permissionStep === 1) {\r\n    setText(\"messageLabel\", \"Access Granted!\");\r\n    resumeGameplay();\r\n  } else {\r\n    setText(\"messageLabel\", \"Action failed. Try another.\");\r\n  }\r\n}\r\n\r\n// Scenario: Program Crashes\r\nfunction crashScenario() {\r\n  setText(\"messageLabel\", \"Application Crashed: Unknown Error\");\r\n  ledScreen.scrollString(\"CRASH\");\r\n  showButtons([\"Check Logs\", \"Force Quit\", \"Wait for Response\", \"Restart Program\"]);\r\n}\r\n\r\nfunction resolveCrash(action) {\r\n  if (action === \"Force Quit\") {\r\n    setText(\"messageLabel\", \"Program force quit. Restart required.\");\r\n    resumeGameplay();\r\n  } else if (action === \"Restart Program\") {\r\n    setText(\"messageLabel\", \"Program restarted successfully!\");\r\n    resumeGameplay();\r\n  } else {\r\n    setText(\"messageLabel\", \"Action failed. Try another.\");\r\n  }\r\n}\r\n\r\n// Scenario: Slow Performance\r\nfunction slowPerformanceScenario() {\r\n  slowPerformanceActive = true; // Slow down gameplay\r\n  setText(\"messageLabel\", \"Application Running Slowly\");\r\n  ledScreen.scrollString(\"SLOW\");\r\n  showButtons([\"Clear Cache\", \"Upgrade Memory\", \"End Background Tasks\", \"Ignore\"]);\r\n}\r\n\r\nfunction resolveSlowPerformance(action) {\r\n  if (action === \"Clear Cache\") {\r\n    setText(\"messageLabel\", \"Cache cleared. Problem persists.\");\r\n    showButtons([\"Upgrade Memory\", \"Disable Animations\", \"End Background Tasks\", \"Ignore\"]);\r\n  } else if (action === \"Upgrade Memory\") {\r\n    setText(\"messageLabel\", \"Performance Restored!\");\r\n    slowPerformanceActive = false;\r\n    resumeGameplay();\r\n  } else {\r\n    setText(\"messageLabel\", \"Action failed. Try another.\");\r\n  }\r\n}\r\n\r\n// Universal resolver for all scenarios\r\nfunction resolveScenario(action) {\r\n  if (currentScenario === \"error\") resolveError(action);\r\n  if (currentScenario === \"permission\") resolvePermission(action);\r\n  if (currentScenario === \"crash\") resolveCrash(action);\r\n  if (currentScenario === \"slow\") resolveSlowPerformance(action);\r\n}\r\n\r\n// Event listeners for buttons and Micro:bit shake\r\nonEvent(\"button1\", \"click\", function() {\r\n  resolveScenario(getText(\"button1\"));\r\n});\r\nonEvent(\"button2\", \"click\", function() {\r\n  resolveScenario(getText(\"button2\"));\r\n});\r\nonEvent(\"button3\", \"click\", function() {\r\n  resolveScenario(getText(\"button3\"));\r\n});\r\nonEvent(\"button4\", \"click\", function() {\r\n  resolveScenario(getText(\"button4\"));\r\n});\r\nonBoardEvent(accelerometer, \"shake\", function() {\r\n  setText(\"messageLabel\", \"Program Restarted\");\r\n  resumeGameplay();\r\n});\r\n\r\n// Resume gameplay after resolving scenarios\r\nfunction resumeGameplay() {\r\n  scenarioActive = false; // Resume gameplay\r\n  setText(\"messageLabel\", \"\");\r\n  hideAllButtons();\r\n}\r\n\r\nfunction showButtons(options) {\r\n  hideAllButtons();\r\n  for (var i = 0; i < options.length; i++) {\r\n    showElement(\"button\" + (i + 1));\r\n    setText(\"button\" + (i + 1), options[i]);\r\n  }\r\n}\r\n\r\nfunction hideAllButtons() {\r\n  for (var i = 1; i <= 4; i++) {\r\n    hideElement(\"button\" + i);\r\n  }\r\n}",
    "start_html": "<div id=\"designModeViz\" class=\"appModern clip-content\" data-radium=\"true\" style=\"width: 320px; height: 450px; display: block;\"><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"gameScreen\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\"><img data-canonical-image-url=\"icon://fa-car\" data-image-type=\"icon\" data-object-fit=\"contain\" id=\"car\" style=\"height: 60px; width: 45px; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; position: absolute; left: 115px; top: 80px; margin: 0px;\"><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 13px; padding: 2px 15px; width: 245px; height: 45px; position: absolute; left: 40px; top: 400px;\" id=\"messageLabel\"></label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 13px; padding: 2px 15px; width: 135px; height: 25px; position: absolute; left: 20px; top: 15px;\" id=\"scoreLabel\"></label><img data-canonical-image-url=\"icon://fa-star-o\" data-image-type=\"icon\" data-object-fit=\"contain\" id=\"object\" style=\"height: 60px; width: 45px; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; position: absolute; left: 130px; top: 165px; margin: 0px;\"><button id=\"button1\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 35px; width: 145px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 165px; top: 15px;\" class=\"design-mode-hidden\">Button</button><button id=\"button2\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 35px; width: 145px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 165px; top: 65px;\" class=\"design-mode-hidden\">Button</button><button id=\"button3\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 35px; width: 145px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 165px; top: 115px;\" class=\"design-mode-hidden\">Button</button><button id=\"button4\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 35px; width: 145px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 165px; top: 165px;\" class=\"design-mode-hidden\">Button</button></div><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"scenarioScreen\" style=\"display: none; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\"></div></div>",
    "preload_asset_list": null,
    "encrypted_examples": [

    ],
    "long_instructions": "# Welcome to the Troubleshooting Simulation!\r\n\r\n### **Step 1: Connect Your Micro:bit**\r\nBefore you begin, make sure your Micro:bit is properly connected to your computer. Follow these steps:\r\n1. Plug your Micro:bit into your computer using a USB cable.\r\n2. In the app, click the **Connect Micro:bit** button and ensure your device is detected.\r\n3. Once connected, you're ready to start troubleshooting!\r\n\r\n---\r\n\r\n### **Step 2: Explore the Simulation**\r\n\r\n::: details [**Read More**]\r\nIn this simulation, you will take on the role of a troubleshooter trying to keep a \r\ncomputer system running smoothly. Use the **Micro:bit tilt controls** to move the car on the screen and interact with the game environment. Here's what to expect:\r\n\r\n- **Goal**: Collect objects on the screen to earn points.\r\n- **Challenges**: Occasionally, your system will encounter problems (e.g., slow performance, crashes, or errors).\r\n- When an issue arises, the system will:\r\n  - Display a message describing the problem.\r\n  - Provide a set of potential actions for you to try.\r\n\r\n:::\r\n---\r\n\r\n### **Step 3: Resolve System Issues**\r\n\r\n::: details [**Read More**]\r\nWhen a problem appears:\r\n1. **Read the Message**: Carefully review the problem that has occurred (e.g., \"Application Crashed: Unknown Error\").\r\n2. **Try Different Actions**:\r\n   - Use the buttons on the screen to test possible solutions.\r\n   - Some actions will help, while others might make things worse or have no effect. Think critically about what might work!\r\n3. **Restart When Necessary**:\r\n   - Shake your Micro:bit to restart the system when needed. This may be required to fully resolve some issues.\r\n4. **Observe Feedback**:\r\n   - Pay attention to how the system responds to your actions. If one solution doesn’t work, try another!\r\n\r\n:::\r\n---\r\n\r\n### **Tips for Success**\r\n\r\n::: details [**Read More**]\r\n- **Experiment**: Not every action will work, and that's okay! The goal is to figure out what steps are most effective for each type of problem.\r\n- **Communicate**: If you're working with a partner, talk through your reasoning before trying each action.\r\n- **Keep Track**: Pay attention to what actions resolve problems and what actions don’t. This will help you refine your troubleshooting approach.\r\n\r\n:::\r\n"
  },
  "audit_log": "[{\"changed_at\":\"2025-01-22 21:22:01 +0000\",\"changed\":[\"validation_enabled\",\"code_functions\",\"preload_asset_list\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2025-01-23 06:14:05 +0000\",\"changed\":[],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2025-01-23 06:38:19 +0000\",\"changed\":[\"start_blocks\",\"start_html\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2025-01-23 22:09:19 +0000\",\"changed\":[\"start_blocks\",\"start_html\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2025-01-24 04:55:49 +0000\",\"changed\":[\"validation_enabled\",\"code_functions\",\"embed\",\"start_blocks\",\"preload_asset_list\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2025-01-24 04:57:34 +0000\",\"changed\":[\"start_blocks\",\"start_html\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2025-01-24 05:00:48 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"preload_asset_list\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2025-01-24 05:03:52 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"encrypted_examples\",\"long_instructions\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>