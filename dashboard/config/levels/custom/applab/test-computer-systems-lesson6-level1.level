<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2025-01-22T21:21:13.000Z",
  "level_num": "custom",
  "user_id": 1574,
  "properties": {
    "skin": "applab",
    "validation_enabled": "true",
    "code_functions": {
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "getNumber": null,
      "setNumber": null,
      "checkbox": null,
      "radioButton": null,
      "getChecked": null,
      "setChecked": null,
      "image": null,
      "getImageURL": null,
      "setImageURL": null,
      "playSound": null,
      "stopSound": null,
      "playSpeech": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "setSize": null,
      "setProperty": null,
      "getProperty": null,
      "write": null,
      "getXPosition": null,
      "getYPosition": null,
      "setScreen": null,
      "rgb": null,
      "open": null,
      "createCanvas": null,
      "setActiveCanvas": null,
      "line": null,
      "circle": null,
      "rect": null,
      "setStrokeWidth": null,
      "setStrokeColor": null,
      "setFillColor": null,
      "drawImageURL": null,
      "getImageData": null,
      "putImageData": null,
      "clearCanvas": null,
      "getRed": null,
      "getGreen": null,
      "getBlue": null,
      "getAlpha": null,
      "setRed": null,
      "setGreen": null,
      "setBlue": null,
      "setAlpha": null,
      "setRGB": null,
      "getColumn": null,
      "startWebRequest": null,
      "setKeyValue": null,
      "getKeyValue": null,
      "createRecord": null,
      "readRecords": null,
      "updateRecord": null,
      "deleteRecord": null,
      "getUserId": null,
      "drawChart": null,
      "drawChartFromRecords": null,
      "getPrediction": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "setTimeout": null,
      "clearTimeout": null,
      "timedLoop": null,
      "stopTimedLoop": null,
      "getTime": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "moduloOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "mathPow": null,
      "mathSqrt": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "console.clear": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "declareAssign_list_123": null,
      "accessListItem": null,
      "listLength": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "join": null,
      "declareAssign_object": null,
      "getValue": null,
      "addPair": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null,
      "pinMode": null,
      "digitalWrite": null,
      "digitalRead": null,
      "analogWrite": null,
      "analogRead": null,
      "boardConnected": null,
      "var myLed = createLed": null,
      "var myButton = createButton": null,
      "var mySensor = createCapacitiveTouchSensor": null,
      "__.on": null,
      "__.off": null,
      "__.toggle": null,
      "__.blink": null,
      "__.pulse": null,
      "colorLeds[0].on": null,
      "colorLeds[0].off": null,
      "colorLeds[0].toggle": null,
      "colorLeds[0].blink": null,
      "colorLeds[0].pulse": null,
      "stop": null,
      "color": null,
      "intensity": null,
      "led.on": null,
      "led.off": null,
      "led.blink": null,
      "led.toggle": null,
      "led.pulse": null,
      "buzzer.frequency": null,
      "buzzer.note": null,
      "buzzer.stop": null,
      "buzzer.playNotes": null,
      "buzzer.playSong": null,
      "accelerometer.getOrientation": null,
      "accelerometer.getAcceleration": null,
      "isPressed": null,
      "holdtime": null,
      "soundSensor.value": null,
      "soundSensor.setScale": null,
      "soundSensor.threshold": null,
      "lightSensor.value": null,
      "lightSensor.setScale": null,
      "lightSensor.threshold": null,
      "tempSensor.F": null,
      "tempSensor.C": null,
      "toggleSwitch.isOpen": null,
      "onBoardEvent": null,
      "ledScreen.on": null,
      "ledScreen.off": null,
      "ledScreen.toggle": null,
      "ledScreen.display": null,
      "ledScreen.clear": null,
      "ledScreen.scrollNumber": null,
      "ledScreen.scrollString": null,
      "compass.getHeading": null,
      "exit": null,
      "createLed": null,
      "on": null,
      "off": null,
      "toggle": null,
      "blink": null,
      "pulse": null,
      "createButton": null,
      "createCapacitiveTouchSensor": null,
      "ledScreen": null,
      "lightSensor.start": null
    },
    "encrypted": "false",
    "embed": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "never_autoplay_video": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "hide_view_data_button": "false",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "makerlab_enabled": "microbit",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "ai_enabled": "false",
    "start_blocks": "// Variables for car and object positions\nvar carX = 160;\nvar carY = 240;\nvar objectX = randomNumber(10, 310);\nvar objectY = randomNumber(10, 440);\nvar score = 0;\nvar scenarioActive = false;\n\n// Initialize game\ninitializeGame();\nfunction initializeGame() {\n  setText(\"scoreLabel\", \"Score: \" + score);\n  setPosition(\"car\", carX, carY, 50, 50); // Car sprite\n  setPosition(\"object\", objectX, objectY, 30, 30); // Collectible object\n  timedLoop(1000, function() {\n    if (!scenarioActive) {\n      checkCollision();\n    }\n  });\n}\n\n// Move car based on tilt\nonBoardEvent(accelerometer, \"data\", function() {\n  if (!scenarioActive) { // Stop movement during a scenario\n    var pitch = accelerometer.getOrientation(\"pitch\");\n    var roll = accelerometer.getOrientation(\"roll\");\n    carX = Math.max(0, Math.min(320, carX + roll / 10));\n    carY = Math.max(0, Math.min(480, carY + pitch / 10));\n    setPosition(\"car\", carX, carY);\n  }\n});\n\n// Check for collision\nfunction checkCollision() {\n  if (Math.abs(carX - objectX) < 30 && Math.abs(carY - objectY) < 30) {\n    score += 10;\n    setText(\"scoreLabel\", \"Score: \" + score);\n    objectX = randomNumber(10, 310);\n    objectY = randomNumber(10, 440);\n    setPosition(\"object\", objectX, objectY);\n\n    // Randomly trigger a troubleshooting scenario\n    if (randomNumber(1, 5) == 1) {\n      triggerScenario();\n    }\n  }\n}\n\n// Trigger a random troubleshooting scenario\nfunction triggerScenario() {\n  scenarioActive = true; // Stop gameplay\n  var scenario = randomNumber(1, 4); // Random scenario type\n  if (scenario == 1) errorScenario();\n  if (scenario == 2) permissionScenario();\n  if (scenario == 3) crashScenario();\n  if (scenario == 4) performanceScenario();\n}\n\n// Scenario: Error Messages\nfunction errorScenario() {\n  setText(\"messageLabel\", \"Error: 404 Not Found\");\n  ledScreen.scrollString(\"404\"); // Display \"404\" on Micro:bit\n}\n\n// Scenario: Permission Errors\nfunction permissionScenario() {\n  setText(\"messageLabel\", \"Permission Denied\");\n  ledScreen.scrollString(\"LOCK\"); // Display \"LOCK\" on Micro:bit\n}\n\n// Scenario: Program Crashes\nfunction crashScenario() {\n  setText(\"messageLabel\", \"Program Crashed\");\n  ledScreen.scrollString(\"ERR\"); // Display \"ERR\" on Micro:bit\n}\n\n// Scenario: Slow Performance\nfunction performanceScenario() {\n  setText(\"messageLabel\", \"System Running Slowly\");\n  ledScreen.scrollString(\"SLOW\"); // Display \"SLOW\" on Micro:bit\n}\n\n// Resolve scenario and return to gameplay\nonEvent(\"button1\", \"click\", function() {\n  resolveScenario(\"button1\");\n});\nonEvent(\"button2\", \"click\", function() {\n  resolveScenario(\"button2\");\n});\nonBoardEvent(buttonA, \"down\", function() {\n  resolveScenario(\"A\");\n});\nonBoardEvent(buttonB, \"down\", function() {\n  resolveScenario(\"B\");\n});\nonBoardEvent(accelerometer, \"shake\", function() {\n  resolveScenario(\"shake\");\n});\n\n// Resolve scenario function\nfunction resolveScenario(action) {\n  // Handle different actions\n  if (action === \"button1\") {\n    setText(\"messageLabel\", \"Resolved with Button 1!\");\n  } else if (action === \"button2\") {\n    setText(\"messageLabel\", \"Resolved with Button 2!\");\n  } else if (action === \"A\") {\n    setText(\"messageLabel\", \"Resolved with Micro:bit Button A!\");\n  } else if (action === \"B\") {\n    setText(\"messageLabel\", \"Resolved with Micro:bit Button B!\");\n  } else if (action === \"shake\") {\n    setText(\"messageLabel\", \"Resolved with Micro:bit Shake!\");\n  }\n\n  // Reset scenario and resume gameplay\n  scenarioActive = false; // Resume gameplay\n  setText(\"messageLabel\", \"\"); // Clear scenario message\n}",
    "start_html": "<div id=\"designModeViz\" class=\"appModern clip-content\" data-radium=\"true\" style=\"width: 320px; height: 450px; display: none;\"><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"screen1\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\"><img data-canonical-image-url=\"icon://fa-car\" data-image-type=\"icon\" data-object-fit=\"contain\" id=\"car\" style=\"height: 60px; width: 45px; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; position: absolute; left: 115px; top: 80px; margin: 0px;\"><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 13px; padding: 2px 15px; width: 195px; height: 25px; position: absolute; left: 60px; top: 400px;\" id=\"messageLabel\">text</label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 13px; padding: 2px 15px; width: 135px; height: 25px; position: absolute; left: 20px; top: 15px;\" id=\"scoreLabel\">text</label><img data-canonical-image-url=\"icon://fa-star-o\" data-image-type=\"icon\" data-object-fit=\"contain\" id=\"object\" style=\"height: 60px; width: 45px; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; position: absolute; left: 130px; top: 165px; margin: 0px;\"></div></div>",
    "preload_asset_list": null
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2025-01-22 21:22:01 +0000\",\"changed\":[\"validation_enabled\",\"code_functions\",\"preload_asset_list\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2025-01-23 06:14:05 +0000\",\"changed\":[],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2025-01-23 06:38:19 +0000\",\"changed\":[\"start_blocks\",\"start_html\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>