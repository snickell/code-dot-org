<Pythonlab>
  <config><![CDATA[{
  "published": true,
  "game_id": 72,
  "created_at": "2024-10-30T15:32:53.000Z",
  "level_num": "custom",
  "user_id": 18603,
  "properties": {
    "encrypted": "false",
    "ai_tutor_available": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "predict_settings": {
      "isPredictLevel": false
    },
    "long_instructions": "# Assignment Operators\r\n\r\n::: details [Step 1]\r\nModify the code to introduce new stats, such as `mana` or `stamina`.\r\n:::\r\n\r\n::: details [Step 2]\r\nUse assignment operators (`+=`, `-=`, `*=`, `/=`) to update these stats based on other _events_ in the adventure (For instance: using mana to cast a spell or regaining stamina after resting).\r\n:::\r\n",
    "start_sources": {
      "files": {
        "0": {
          "id": "0",
          "name": "main.py",
          "language": "py",
          "contents": "# STEP ONE\nhealth = 100\nexperience_points = 500\ngold = 50\n\n\n# Display the initial stats\nprint(\"Character Stats:\")\nprint(\"Health:\", health)\nprint(\"Experience Points:\", experience_points)\nprint(\"Gold:\", gold)\n\n\n# Simulate events in the adventure\ndamage_taken = 20\ngold_found = 100\nexp_gained = 150\n\n\n# STEP TWO\nhealth -= damage_taken  # Reduce health after taking damage\ngold += gold_found  # Add gold after finding treasure\nexperience_points += exp_gained  # Add experience points after defeating an enemy\n\n\n# Display updated stats\nprint(\"\\nUpdated Character Stats:\")\nprint(\"Health:\", health)\nprint(\"Experience Points:\", experience_points)\nprint(\"Gold:\", gold)",
          "folderId": "0",
          "active": true,
          "open": true
        }
      },
      "folders": {
      }
    },
    "encrypted_exemplar_sources": "Cy05mEYW43yx3lpwk/lyQYs4qPKDc2JDG2xzW6EZ2HXNXiuQgI6R1SlqPKPt\nlYISiQp/Zt7oXvHNpBSUY2/tVcAoh32dY5clMNiyTLp2qQ5O47DJ0rGD0IJV\nXDiO//IRW/LZBlXyH5JryMNp/3+nzjeN79sMlWVZZ3h9Kzhd4rcO9pqVY2I/\nJhkgXx6NH3V98auevuS1U7yVoDtxuyQl2GAkznUEn0vUDW37KuFbjJAISz5A\n+RIBO9JHqmkPp3yowvchPQXpLL8ijmsAMmoEPOgEuOt9tGmBbee84hO8VsAJ\n0eZ+19TmD8go2XG0+INJM4ONs6ynROp/xIh7o6ndj2+vHOlGafjr+23kX7gg\niVoGOsGz3vE7MFr+N7AuDHNCvPv/ocPz535EC4iM4zKvJiEFKQjd6mXer/m7\nJTnpvM4j+QSSK3nCrLDwFgYsbpDKU+DzXSHYlYrNbsxu6NKVp5eM1Upefg4q\nceeE7HJUf5aVRXV3WG9xIMqOeA2obEirQnYW7ZD03ORmcbmoOrssQVATpWxH\nWqN1jb9KaUJ59LrsCgHiq0lGAxbVht3iS1q9cWoPdOJHKPOmuE8Bu4Y8DYa6\nOHbN03QvPSIdpYQRcYL6zYAqnSPkUKwtlpB2uORlr0t0JP7IG9ZFFVC5eKIk\nnQ==\n",
    "display_name": "Assignment Operators",
    "bubble_choice_description": "Learn how to apply assignment operators (e.g., `=`, `+=`, `-=`) to update variable values.",
    "thumbnail_url": "https://images.code.org/9434afb627c0db1cfd70bf753f31fb10-equal2.png"
  },
  "audit_log": "[{\"changed_at\":\"2024-10-30T15:32:53.650+00:00\",\"changed\":[\"cloned from \\\"IPP_SampleProgression_UMC_Practice_4\\\"\"],\"cloned_from\":\"IPP_SampleProgression_UMC_Practice_4\"},{\"changed_at\":\"2024-10-30 15:34:52 +0000\",\"changed\":[\"predict_settings\",\"long_instructions\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2024-10-30 15:35:58 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2024-10-31 00:45:14 +0000\",\"changed\":[\"predict_settings\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"}]"
}]]></config>
</Pythonlab>
